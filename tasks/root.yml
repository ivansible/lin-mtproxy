---
- name: remove stale docker container
  include_tasks: rmdocker.yml
  when: mtproxy_rmdocker |bool
  tags: mtproxy_rmdocker


- name: detect latest mtg release
  uri:
    url: https://github.com/9seconds/mtg/releases/latest
    method: HEAD
    creates: "{{ mtproxy_reinstall | bool | ternary(omit, mtproxy_bin_file) }}"
  register: latest_mtg_release
  when: mtproxy_release == 'latest'
  tags: mtproxy_install

- set_fact:
    mtproxy_release: "{{ latest_mtg_release.url | basename }}"
  when: latest_mtg_release.url is defined
  tags: mtproxy_install

- debug:
    msg: "latest mtg release: {{ mtproxy_release }}"
  run_once: true
  when: latest_mtg_release.url is defined
  tags: mtproxy_install

- name: download mtproxy
  get_url:
    url: https://github.com/9seconds/mtg/releases/download/{{ mtproxy_release }}/mtg-linux-amd64
    dest: "{{ mtproxy_bin_file }}"
    mode: 0755
    force: "{{ mtproxy_reinstall | bool }}"
  tags: mtproxy_install


- name: setup mtproxy service unit
  template:
    src: mtproxy.service.j2
    dest: /etc/systemd/system/mtproxy.service
    mode: 0644
  register: unit_result
  tags: mtproxy_service

- name: start mtproxy system service
  systemd:
    name: mtproxy
    daemon_reload: yes
    enabled: yes
    state: "{{ unit_result is changed | ternary('restarted', 'started') }}"
  tags: mtproxy_service


- name: open mtproxy port
  ufw:
    rule: allow
    port: "{{ mtproxy_port }}"
  no_log: true
  tags: mtproxy_firewall
...
